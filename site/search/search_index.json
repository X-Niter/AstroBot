{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"AstroBot Documentation","text":"<p>Welcome to the AstroBot documentation! This guide will help you get started with AstroBot, a sophisticated Discord bot for Minecraft server management, Twitch integration, and AI-powered community management.</p>"},{"location":"#what-is-astrobot","title":"What is AstroBot?","text":"<p>AstroBot is a multifunctional Discord bot designed to revolutionize Minecraft server management through intelligent AI-driven interfaces and automated workflows. It combines powerful AI features with Twitch integration to provide a comprehensive solution for gaming communities.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Minecraft Integration: Manage your Minecraft server directly from Discord</li> <li>AI-Powered Assistance: Leverage advanced AI models including GPT-4o and Claude 3.5</li> <li>Twitch Integration: Transform Discord into a Twitch-powered community engine</li> <li>Customization: Extensive options for personalizing bot behavior and appearance</li> <li>Web Dashboard: Comprehensive web interface for managing all bot features</li> <li>Premium Features: Enhanced capabilities for power users and community builders</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Check out the Getting Started guide to begin your journey with AstroBot.</p>"},{"location":"#community","title":"Community","text":"<p>Join our community to stay updated on the latest features and get support:</p> <ul> <li>Discord Server</li> <li>GitHub Repository</li> <li>Twitter</li> </ul>"},{"location":"#why-astrobot","title":"Why AstroBot?","text":"<p>AstroBot stands out with its innovative approach to community management:</p> <ul> <li>Seamless Integration: Connect your Discord, Minecraft, and Twitch communities</li> <li>AI-Powered: Get intelligent insights and automation powered by the latest AI models</li> <li>Customizable: Tailor the bot to your community's specific needs</li> <li>Constantly Evolving: Regular updates and new features based on community feedback</li> </ul>"},{"location":"#ready-to-get-started","title":"Ready to Get Started?","text":"<p>Install AstroBot \u2192</p>"},{"location":"ai-integrations/","title":"AI Integrations","text":"<p>AstroBot leverages advanced AI models to provide powerful features for Discord communities. This guide explains how to use and configure these AI integrations.</p>"},{"location":"ai-integrations/#available-ai-models","title":"Available AI Models","text":"<p>AstroBot integrates with multiple AI providers to deliver a range of capabilities:</p>"},{"location":"ai-integrations/#openai-gpt-4o","title":"OpenAI GPT-4o","text":"<p>GPT-4o is OpenAI's most advanced multimodal model, capable of processing both text and images.</p> <p>Key capabilities: - Natural language understanding and generation - Code analysis and generation - Image description and analysis - Reasoning about complex problems</p>"},{"location":"ai-integrations/#anthropic-claude-35","title":"Anthropic Claude 3.5","text":"<p>Claude 3.5 is Anthropic's most advanced AI assistant, known for its thoughtful, helpful responses.</p> <p>Key capabilities: - Extended context handling - Nuanced content analysis - Safe and aligned outputs - Detailed reasoning</p>"},{"location":"ai-integrations/#elevenlabs-voice-ai","title":"ElevenLabs Voice AI","text":"<p>ElevenLabs provides state-of-the-art voice synthesis capabilities.</p> <p>Key capabilities: - Natural-sounding voice generation - Multiple voice options and languages - Real-time text-to-speech - Emotion and tone control</p>"},{"location":"ai-integrations/#configuration","title":"Configuration","text":"<p>These AI integrations require API keys to function. You'll need to obtain these keys from the respective services and configure them in AstroBot.</p>"},{"location":"ai-integrations/#setting-api-keys","title":"Setting API Keys","text":"<p>API keys can be configured in several ways:</p> <ol> <li> <p>Environment Variables (recommended for production):    <pre><code>OPENAI_API_KEY=your_openai_key\nANTHROPIC_API_KEY=your_anthropic_key\nELEVENLABS_API_KEY=your_elevenlabs_key\n</code></pre></p> </li> <li> <p>Web Dashboard:</p> </li> <li>Navigate to Settings &gt; API Keys</li> <li>Enter your API keys in the appropriate fields</li> <li> <p>Click Save to store them securely</p> </li> <li> <p>Configuration File:    <pre><code>ai:\n  openai:\n    api_key: your_openai_key\n    model: gpt-4o\n  anthropic:\n    api_key: your_anthropic_key\n    model: claude-3.5-sonnet-20240716\n  elevenlabs:\n    api_key: your_elevenlabs_key\n    voice_id: default\n</code></pre></p> </li> </ol>"},{"location":"ai-integrations/#usage-examples","title":"Usage Examples","text":""},{"location":"ai-integrations/#discord-commands","title":"Discord Commands","text":"<p>Users can interact with AI models through Discord commands:</p> <pre><code>!ask [question]             # Ask a general question (GPT-4o)\n!explain [concept]          # Get a detailed explanation (Claude 3.5)\n!code [task]                # Generate code for a task (GPT-4o)\n!image [description]        # Generate an image (DALL-E 3)\n!voiceover [text]           # Generate voice audio (ElevenLabs)\n!analyze [image]            # Analyze an uploaded image (GPT-4o Vision)\n</code></pre>"},{"location":"ai-integrations/#code-examples","title":"Code Examples","text":""},{"location":"ai-integrations/#using-openai-in-your-custom-commands","title":"Using OpenAI in your custom commands:","text":"<pre><code>from services.ai_service import openai_client\n\nasync def generate_response(prompt):\n    response = await openai_client.chat.completions.create(\n        model=\"gpt-4o\",\n        messages=[{\"role\": \"user\", \"content\": prompt}],\n        max_tokens=1000\n    )\n    return response.choices[0].message.content\n\n@bot.command()\nasync def custom_ai(ctx, *, prompt):\n    \"\"\"Custom AI response using GPT-4o\"\"\"\n    response = await generate_response(prompt)\n    await ctx.send(response)\n</code></pre>"},{"location":"ai-integrations/#using-claude-in-your-custom-commands","title":"Using Claude in your custom commands:","text":"<pre><code>from services.ai_service import anthropic_client\n\nasync def generate_claude_response(prompt):\n    response = await anthropic_client.messages.create(\n        model=\"claude-3.5-sonnet-20240716\",\n        max_tokens=1000,\n        messages=[{\"role\": \"user\", \"content\": prompt}]\n    )\n    return response.content[0].text\n\n@bot.command()\nasync def deep_think(ctx, *, question):\n    \"\"\"Thoughtful response using Claude 3.5\"\"\"\n    response = await generate_claude_response(question)\n    await ctx.send(response)\n</code></pre>"},{"location":"ai-integrations/#managing-costs","title":"Managing Costs","text":"<p>AI API usage incurs costs, so AstroBot includes tools to help manage and monitor usage:</p> <ol> <li>Rate Limiting: Configure per-user or per-server limits</li> <li>Usage Dashboard: Monitor AI usage in the web dashboard</li> <li>Cost Estimation: Get estimates before enabling AI features</li> <li>Tiered Access: Restrict certain AI features to premium users</li> </ol>"},{"location":"ai-integrations/#best-practices","title":"Best Practices","text":"<ol> <li>Prompt Engineering: Craft clear, specific prompts for better results</li> <li>Context Management: Provide sufficient context for complex questions</li> <li>Model Selection: Use GPT-4o for general tasks, Claude 3.5 for nuanced reasoning</li> <li>Caching: Enable response caching for common queries to reduce costs</li> <li>Safety Filters: Keep AI safety filters enabled to prevent inappropriate content</li> </ol>"},{"location":"ai-integrations/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with AI integrations:</p> <ol> <li>Verify API Keys: Ensure your API keys are valid and have sufficient credits</li> <li>Check Logs: Review logs for error messages</li> <li>Network Issues: Confirm your server can reach the AI providers' APIs</li> <li>Model Availability: Some models may have availability limitations</li> <li>Rate Limits: You might be hitting rate limits from the AI providers</li> </ol> <p>For persistent issues, check the AstroBot documentation for updates or contact support.</p>"},{"location":"ai-workflows/","title":"AI-Powered GitHub Workflows","text":"<p>AstroBot uses AI-powered GitHub workflows to automate development tasks, including error detection and automatic fixes. This guide explains how these workflows function and how to use them effectively.</p>"},{"location":"ai-workflows/#available-ai-workflows","title":"Available AI Workflows","text":""},{"location":"ai-workflows/#1-ai-issue-processor","title":"1. AI Issue Processor","text":"<p>This workflow automatically analyzes issues when they're created or labeled, and can suggest or implement fixes.</p> <p>Key capabilities: - Analyzes error logs and stack traces in issues - Suggests code fixes with explanations - Can automatically create pull requests with fixes - Assigns appropriate labels and priorities</p>"},{"location":"ai-workflows/#2-ai-comment-handler","title":"2. AI Comment Handler","text":"<p>This workflow responds to special commands in issue and PR comments to trigger AI actions.</p> <p>Available commands: - <code>@ai explain</code> - Explain a piece of code or an error - <code>@ai fix</code> - Suggest or implement a fix for an issue - <code>@ai optimize</code> - Find performance improvements - <code>@ai document</code> - Generate documentation for code - <code>@ai test</code> - Create test cases</p>"},{"location":"ai-workflows/#3-ai-code-review","title":"3. AI Code Review","text":"<p>This workflow automatically reviews pull requests, providing feedback and suggestions.</p> <p>Review focus areas: - Code style and best practices - Potential bugs and security issues - Performance considerations - Documentation completeness</p>"},{"location":"ai-workflows/#4-ai-scheduled-maintenance","title":"4. AI Scheduled Maintenance","text":"<p>This workflow runs on a schedule to perform routine maintenance tasks.</p> <p>Maintenance tasks: - Checking for outdated dependencies - Identifying and fixing common code anti-patterns - Ensuring documentation is up-to-date - Running automated tests and fixing failures</p>"},{"location":"ai-workflows/#how-it-works","title":"How It Works","text":"<ol> <li>GitHub Actions workflows are triggered by events (issue creation, comments, PR submissions, etc.)</li> <li>The workflow uses advanced AI models to analyze code, logs, and context</li> <li>Based on analysis, the AI takes appropriate actions (commenting, creating PRs, etc.)</li> <li>All changes are reviewed by maintainers before being merged</li> </ol>"},{"location":"ai-workflows/#example-fixing-undefined-variable-errors","title":"Example: Fixing Undefined Variable Errors","text":"<p>When the CI pipeline detects errors like <code>undefined name 'func'</code>, the AI workflows can:</p> <ol> <li>Analyze the error and determine the missing import</li> <li>Create a PR that adds the necessary import statements</li> <li>Run tests to verify the fix works</li> <li>Request review from maintainers</li> </ol> <pre><code># Before: Missing import\ndef count_records(guild_id):\n    return db.session.query(func.count(Record.id)).filter_by(guild_id=guild_id).scalar() or 0\n\n# After: AI-fixed with proper import\nfrom sqlalchemy import func\n\ndef count_records(guild_id):\n    return db.session.query(func.count(Record.id)).filter_by(guild_id=guild_id).scalar() or 0\n</code></pre>"},{"location":"ai-workflows/#setting-up-custom-ai-workflows","title":"Setting Up Custom AI Workflows","text":"<p>Maintainers can create custom AI workflows for specific needs:</p> <ol> <li>Navigate to <code>.github/workflows/</code> in the repository</li> <li>Create a new YAML file for your workflow</li> <li>Define triggers, permissions, and steps</li> <li>Configure AI actions and parameters</li> </ol> <p>Example workflow definition:</p> <pre><code>name: AI Error Fixer\n\non:\n  workflow_run:\n    workflows: [\"CI Tests\"]\n    types: [completed]\n\njobs:\n  fix-errors:\n    if: ${{ github.event.workflow_run.conclusion == 'failure' }}\n    runs-on: ubuntu-latest\n    permissions:\n      contents: write\n      pull-requests: write\n\n    steps:\n      - uses: actions/checkout@v3\n\n      - name: Get test errors\n        run: |\n          # Script to extract errors from logs\n\n      - name: AI Fix\n        uses: ./.github/actions/ai-fix\n        with:\n          error-log: ${{ steps.extract.outputs.errors }}\n          create-pr: true\n</code></pre>"},{"location":"ai-workflows/#best-practices","title":"Best Practices","text":"<ol> <li>Review all AI-generated changes before merging</li> <li>Use <code>@ai explain</code> to understand issues before applying fixes</li> <li>Provide detailed context in issue descriptions for better AI analysis</li> <li>Combine AI suggestions with human expertise for optimal results</li> <li>Use AI workflows as assistants, not replacements for human review</li> </ol>"},{"location":"ai-workflows/#future-enhancements","title":"Future Enhancements","text":"<p>The AstroBot team is working on expanding AI capabilities:</p> <ul> <li>Learning from previous fixes to improve suggestions</li> <li>Automated refactoring of complex code</li> <li>Proactive identification of potential issues</li> <li>Integration with development environments</li> <li>Custom fine-tuning for project-specific patterns</li> </ul> <p>By leveraging these AI-powered workflows, the AstroBot project can maintain higher code quality, reduce manual effort, and focus human attention on creative and complex aspects of development.</p>"},{"location":"api-reference/","title":"API Reference","text":"<p>AstroBot provides a RESTful API for integrating with external services.</p>"},{"location":"api-reference/#authentication","title":"Authentication","text":"<p>All API requests require authentication using an API key.</p>"},{"location":"api-reference/#obtaining-an-api-key","title":"Obtaining an API Key","text":"<ol> <li>Log in to the web dashboard</li> <li>Go to Settings &gt; API</li> <li>Generate a new API key</li> </ol>"},{"location":"api-reference/#using-the-api-key","title":"Using the API Key","text":"<p>Include the API key in the request header:</p> <pre><code>Authorization: Bearer YOUR_API_KEY\n</code></pre>"},{"location":"api-reference/#api-endpoints","title":"API Endpoints","text":""},{"location":"api-reference/#bot-status","title":"Bot Status","text":"<pre><code>GET /api/status\n</code></pre> <p>Returns the current status of the bot.</p>"},{"location":"api-reference/#minecraft-server","title":"Minecraft Server","text":"<pre><code>GET /api/minecraft/status\n</code></pre> <p>Returns the status of the Minecraft server.</p> <pre><code>GET /api/minecraft/players\n</code></pre> <p>Returns a list of online players.</p>"},{"location":"api-reference/#twitch-integration","title":"Twitch Integration","text":"<pre><code>GET /api/twitch/status\n</code></pre> <p>Returns the status of the Twitch integration.</p> <pre><code>POST /api/twitch/notify\n</code></pre> <p>Toggle Twitch stream notifications.</p>"},{"location":"contributing/","title":"Contributing to AstroBot","text":"<p>Thank you for considering contributing to AstroBot! This guide will help you get started with contributing to the project.</p>"},{"location":"contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>We expect all contributors to follow our Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"contributing/#how-to-contribute","title":"How to Contribute","text":""},{"location":"contributing/#reporting-bugs","title":"Reporting Bugs","text":"<p>If you find a bug, please report it by creating an issue on the GitHub repository.</p>"},{"location":"contributing/#suggesting-features","title":"Suggesting Features","text":"<p>If you have an idea for a new feature or improvement, please create an issue on the GitHub repository.</p>"},{"location":"contributing/#pull-requests","title":"Pull Requests","text":"<ol> <li>Fork the repository</li> <li>Create a new branch for your changes</li> <li>Make your changes</li> <li>Submit a pull request</li> </ol>"},{"location":"contributing/#development-environment","title":"Development Environment","text":""},{"location":"contributing/#requirements","title":"Requirements","text":"<ul> <li>Python 3.11 or higher</li> <li>Node.js 20 or higher</li> <li>PostgreSQL database</li> </ul>"},{"location":"contributing/#setup","title":"Setup","text":"<ol> <li>Clone the repository</li> <li>Install dependencies</li> <li>Set up environment variables</li> <li>Initialize the database</li> </ol>"},{"location":"contributing/#coding-standards","title":"Coding Standards","text":"<ul> <li>Follow PEP 8 for Python code</li> <li>Use ESLint for JavaScript code</li> <li>Write tests for new features</li> <li>Document your code</li> </ul>"},{"location":"contributing/#ai-powered-development","title":"AI-Powered Development","text":"<p>This project uses AI-powered GitHub Actions to help with development tasks. You can:</p> <ol> <li>Use the <code>@ai</code> command in issue comments to get AI assistance</li> <li>Automatically get AI-suggested fixes for bugs</li> <li>Leverage AI for code review and improvement suggestions</li> </ol>"},{"location":"contributing/#using-ai-commands","title":"Using AI Commands","text":"<p>You can use these commands in issue and PR comments:</p> <ul> <li><code>@ai explain</code> - Explain code or concepts</li> <li><code>@ai fix</code> - Suggest fixes for issues</li> <li><code>@ai implement</code> - Implement requested features</li> <li><code>@ai optimize</code> - Optimize existing code</li> <li><code>@ai test</code> - Generate test cases</li> <li><code>@ai document</code> - Create documentation</li> </ul>"},{"location":"getting-started/","title":"Getting Started with AstroBot","text":"<p>This guide will help you get started with AstroBot, from installation to basic usage.</p>"},{"location":"getting-started/#requirements","title":"Requirements","text":"<p>Before installing AstroBot, make sure you have:</p> <ul> <li>Python 3.11 or higher</li> <li>Node.js 20 or higher</li> <li>PostgreSQL database</li> <li>Discord Bot Token (for bot functionality)</li> <li>Twitch API credentials (for Twitch integration)</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<ol> <li>Clone the repository:</li> </ol> <pre><code>git clone https://github.com/yourusername/astrobot.git\ncd astrobot\n</code></pre> <ol> <li>Install dependencies:</li> </ol> <pre><code>pip install -r requirements.txt\nnpm install\n</code></pre> <ol> <li> <p>Set up environment variables (see <code>.env.example</code>)</p> </li> <li> <p>Initialize the database:</p> </li> </ol> <pre><code>python -m flask db upgrade\n</code></pre> <ol> <li>Start the application:</li> </ol> <pre><code>python main.py\n</code></pre>"},{"location":"getting-started/#basic-usage","title":"Basic Usage","text":""},{"location":"getting-started/#inviting-the-bot-to-your-discord-server","title":"Inviting the Bot to Your Discord Server","text":"<ol> <li>Go to the Discord Developer Portal</li> <li>Select your application</li> <li>Go to the \"OAuth2\" tab</li> <li>In the \"OAuth2 URL Generator\", select the \"bot\" scope</li> <li>Select the required permissions</li> <li>Copy the generated URL and open it in your browser</li> <li>Select the server to invite the bot to</li> </ol>"},{"location":"getting-started/#basic-commands","title":"Basic Commands","text":"<ul> <li><code>!help</code> - Display help message</li> <li><code>!status</code> - Check bot status</li> <li><code>!config</code> - Configure bot settings</li> </ul>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<p>Check out the User Guide for more detailed information.</p>"},{"location":"troubleshooting/","title":"Troubleshooting Guide","text":"<p>This guide covers common issues you might encounter when working with AstroBot and how to resolve them.</p>"},{"location":"troubleshooting/#common-errors","title":"Common Errors","text":""},{"location":"troubleshooting/#undefined-variables","title":"Undefined Variables","text":"<p>If you encounter errors like <code>F821 undefined name 'func'</code> or <code>undefined name 'DiscordServer'</code>, it usually means that a necessary import is missing. Here's how to fix these common issues:</p>"},{"location":"troubleshooting/#missing-sqlalchemy-functions","title":"Missing SQLAlchemy Functions","text":"<pre><code># Add this import at the top of your file\nfrom sqlalchemy import func\n</code></pre> <p>The <code>func</code> object is used for SQL functions and aggregations. It's commonly needed in queries that use operations like <code>count()</code>, <code>max()</code>, or <code>min()</code>.</p>"},{"location":"troubleshooting/#missing-model-references","title":"Missing Model References","text":"<p>If you see <code>undefined name 'DiscordServer'</code> or similar, you need to import the model:</p> <pre><code># Add this import at the top of your file\nfrom models import DiscordServer\n</code></pre>"},{"location":"troubleshooting/#database-connection-issues","title":"Database Connection Issues","text":"<p>If you encounter database connectivity problems:</p> <ol> <li>Check that your database URL is correctly set in the environment variables</li> <li>Verify that the PostgreSQL service is running</li> <li>Ensure that your models are properly defined with correct relationships</li> </ol> <pre><code># Debug database connection\nprint(f\"Database URL: {app.config['SQLALCHEMY_DATABASE_URI']}\")\ntry:\n    db.session.execute(\"SELECT 1\")\n    print(\"Database connection successful\")\nexcept Exception as e:\n    print(f\"Database connection failed: {str(e)}\")\n</code></pre>"},{"location":"troubleshooting/#module-import-errors","title":"Module Import Errors","text":"<p>If you see <code>ModuleNotFoundError</code> or <code>ImportError</code>:</p> <ol> <li>Check your project structure to ensure the module exists</li> <li>Verify that your Python path includes the necessary directories</li> <li>Make sure all dependencies are installed</li> </ol>"},{"location":"troubleshooting/#application-startup-issues","title":"Application Startup Issues","text":""},{"location":"troubleshooting/#flask-application-not-starting","title":"Flask Application Not Starting","text":"<p>If the Flask application fails to start:</p> <ol> <li>Check for syntax errors in your Python files</li> <li>Look for circular imports</li> <li>Verify that the port (5000) is not already in use</li> </ol>"},{"location":"troubleshooting/#discord-bot-not-connecting","title":"Discord Bot Not Connecting","text":"<p>If the Discord bot fails to connect:</p> <ol> <li>Verify that your <code>DISCORD_TOKEN</code> is correct and properly set</li> <li>Check that your bot has the necessary permissions</li> <li>Ensure that you've enabled the necessary Gateway Intents in the Discord Developer Portal</li> </ol>"},{"location":"troubleshooting/#debugging-techniques","title":"Debugging Techniques","text":""},{"location":"troubleshooting/#logging","title":"Logging","text":"<p>AstroBot uses Python's built-in logging module. To add more detailed logs:</p> <pre><code>import logging\n\n# Set up logging\nlogging.basicConfig(level=logging.DEBUG)\nlogger = logging.getLogger(__name__)\n\n# Use throughout your code\nlogger.debug(\"Detailed information for debugging\")\nlogger.info(\"Confirmation that things are working\")\nlogger.warning(\"Something unexpected happened\")\nlogger.error(\"A more serious problem occurred\")\nlogger.critical(\"A fatal error occurred\")\n</code></pre>"},{"location":"troubleshooting/#interactive-debugging","title":"Interactive Debugging","text":"<p>You can use Python's built-in debugger (pdb):</p> <pre><code>import pdb\n\n# Add this line where you want to start debugging\npdb.set_trace()\n</code></pre> <p>When this line is executed, Python will stop and provide an interactive debug console.</p>"},{"location":"troubleshooting/#getting-support","title":"Getting Support","text":"<p>If you can't resolve the issue using this guide:</p> <ol> <li>Check existing issues on GitHub to see if someone else has encountered the same problem</li> <li>Create a new issue with a detailed description of the problem and the steps to reproduce it</li> <li>Join our Discord server for community support</li> </ol>"},{"location":"user-guide/","title":"AstroBot User Guide","text":"<p>This guide covers all the features and functionality of AstroBot.</p>"},{"location":"user-guide/#discord-bot-commands","title":"Discord Bot Commands","text":""},{"location":"user-guide/#general-commands","title":"General Commands","text":"Command Description <code>!help</code> Display help message <code>!status</code> Check bot status <code>!config</code> Configure bot settings"},{"location":"user-guide/#minecraft-integration","title":"Minecraft Integration","text":"Command Description <code>!mc status</code> Check Minecraft server status <code>!mc players</code> List online players <code>!mc whitelist add &lt;player&gt;</code> Add player to whitelist"},{"location":"user-guide/#twitch-integration","title":"Twitch Integration","text":"Command Description <code>!twitch link &lt;channel&gt;</code> Link Twitch channel <code>!twitch live</code> Check if channel is live <code>!twitch notify</code> Toggle stream notifications"},{"location":"user-guide/#web-dashboard","title":"Web Dashboard","text":"<p>The web dashboard provides a user-friendly interface for managing your AstroBot configuration.</p>"},{"location":"user-guide/#accessing-the-dashboard","title":"Accessing the Dashboard","text":"<ol> <li>Ensure the web server is running</li> <li>Open your browser and navigate to <code>http://localhost:5000</code></li> <li>Log in with your credentials</li> </ol>"},{"location":"user-guide/#dashboard-features","title":"Dashboard Features","text":"<ul> <li>Overview: General statistics and status</li> <li>Bot Settings: Configure bot behavior</li> <li>Minecraft: Manage Minecraft integration</li> <li>Twitch: Configure Twitch integration</li> <li>Commands: Customize and manage commands</li> <li>Logs: View bot activity logs</li> </ul>"},{"location":"user-guide/#premium-features","title":"Premium Features","text":"<p>AstroBot offers premium features for enhanced functionality:</p> <ul> <li>Custom Bot Appearance: Customize bot name and avatar</li> <li>Advanced Analytics: Detailed usage and performance metrics</li> <li>Priority Support: Get faster support from our team</li> <li>Extended Integrations: Additional third-party service integrations</li> </ul>"},{"location":"user-guide/#upgrading-to-premium","title":"Upgrading to Premium","text":"<p>Visit the Premium tab in the dashboard to view plans and upgrade your subscription.</p>"}]}